<ResourceDictionary x:Class="Microsoft.R.Wpf.CommonResources"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:wpf="clr-namespace:Microsoft.R.Wpf"
                    xmlns:selectors="clr-namespace:Microsoft.Common.Wpf.Selectors;assembly=Microsoft.R.Common.Wpf"
                    xmlns:imagecatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
                    xmlns:controls="clr-namespace:Microsoft.Common.Wpf.Controls;assembly=Microsoft.R.Common.Wpf"
                    xmlns:rcontrols="clr-namespace:Microsoft.R.Wpf.Controls"
                    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
                    xmlns:cwpf="clr-namespace:Microsoft.Common.Wpf;assembly=Microsoft.R.Common.Wpf"
                    mc:Ignorable="d">
    <!--Icons-->
    <PathGeometry FillRule="NonZero" x:Key="ArrowRigth10" Figures="M0,0 L5,5 L0,10 z" />
    <PathGeometry FillRule="NonZero" x:Key="ArrowRightDown6" Figures="M0,6 L6,6 L6,0 z" />
    <PathGeometry FillRule="NonZero" x:Key="ArrowDown8" Figures="M0,4 L4,8 L8,4 z" />
    <PathGeometry FillRule="NonZero" x:Key="GeometryCircle18" Figures="m 17 8 a 9 9 0 0 1 -9 9 9 9 0 0 1 -9 -9 9 9 0 0 1 9 -9 9 9 0 0 1 9 9 z"/>
    <PathGeometry FillRule="NonZero" x:Key="GeometryLocal" Figures="M 2 3 L 2 12 L 7 12 L 7 13 L 4 13 L 4 14 L 12 14 L 12 13 L 9 13 L 9 12 L 14 12 L 14 3 L 2 3 z"/>
    <PathGeometry FillRule="NonZero" x:Key="GeometryCloud" Figures="M 6 3 A 3 3 0 0 0 3 6 A 3 3 0 0 0 3.2109375 7.1054688 A 3 3 0 0 0 1 10 A 3 3 0 0 0 4 13 L 12 13 A 3 3 0 0 0 15 10 A 3 3 0 0 0 12.787109 7.1054688 A 3 3 0 0 0 13 6 A 3 3 0 0 0 10 3 A 3 3 0 0 0 9.0019531 3.1757812 A 3 3 0 0 0 8 3 A 3 3 0 0 0 6.9980469 3.1738281 A 3 3 0 0 0 6 3 z"/>
    <PathGeometry FillRule="NonZero" x:Key="GeometryR" Figures="m 11.681702 10.3622 -2.0606078 0 -1.2385865 -2.0495 q -0.138855 -0.2333 -0.2666016 -0.4166 -0.1277466 -0.1833 -0.2610474 -0.311 -0.1277466 -0.1333 -0.2721558 -0.2 -0.138855 -0.072 -0.305481 -0.072 l -0.4832153 0 0 3.0493 -1.7940065 0 0 -7.9647 2.8437502 0 q 2.8992927 0 2.8992927 2.1661 0 0.4166 -0.127747 0.772 -0.127747 0.3499 -0.361023 0.6332 -0.233276 0.2833 -0.5665284 0.4888 -0.3276978 0.2055 -0.7331543 0.3221 l 0 0.022 q 0.1777343 0.056 0.3443603 0.1833 0.166626 0.1222 0.3221436 0.2888 0.1555176 0.1667 0.2943726 0.3611 0.1444092 0.1888 0.2610472 0.3721 l 1.505188 2.355 z m -4.8876954 -6.6206 0 2.2161 0.7775879 0 q 0.5776368 0 0.9275514 -0.3332 0.3554688 -0.3389 0.3554688 -0.8387 0 -1.0442 -1.249695 -1.0442 l -0.8109131 0 z"/>

    <DrawingBrush x:Key="StatusBarUpTriangle">
        <DrawingBrush.Drawing>
            <GeometryDrawing Brush="{DynamicResource {x:Static wpf:Brushes.StatusBarDefaultTextBrushKey}}" Geometry="F1M0,0 -1,1 1,1" />
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IconArrowRigth16">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                    <GeometryDrawing Geometry="F1M6.5,4 L10.5,8 L6.5,12 z">
                        <GeometryDrawing.Pen>
                            <Pen Brush="{DynamicResource {x:Static wpf:Brushes.ToolWindowTextBrushKey}}" Thickness="1" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IconArrowRigthHighlight16">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                    <GeometryDrawing Geometry="F1M6.5,4 L10.5,8 L6.5,12 z">
                        <GeometryDrawing.Pen>
                            <Pen Brush="{DynamicResource {x:Static wpf:Brushes.TreeViewSelectedItemActiveBrushKey}}" Thickness="1" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IconArrowRigthDown16">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                    <GeometryDrawing Brush="{DynamicResource {x:Static wpf:Brushes.ToolWindowTextBrushKey}}" Geometry="F1M5,11 L11,11 L11,5 z" />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IconGrayLoad">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,8C0,3.582 3.582,0 8,0 12.418,0 16,3.582 16,8 16,12.418 12.418,16 8,16 3.582,16 0,12.418 0,8" />
                    <GeometryDrawing Brush="Gray" Geometry="F1M8,1C4.135,1 1,4.134 1,8 1,11.865 4.135,15 8,15 11.865,15 15,11.865 15,8 15,4.134 11.865,1 8,1" />
                    <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M8,2C4.6871429,2,2,4.6862857,2,8c0,3.312857,2.6871429,6,6,6,3.312857,0,6,-2.687143,6,-6 C14,4.6862857,11.312857,2,8,2" />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IconLoad">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,8C0,3.582 3.582,0 8,0 12.418,0 16,3.582 16,8 16,12.418 12.418,16 8,16 3.582,16 0,12.418 0,8" />
                    <GeometryDrawing Brush="#FF329932" Geometry="F1M8,1C4.135,1 1,4.134 1,8 1,11.865 4.135,15 8,15 11.865,15 15,11.865 15,8 15,4.134 11.865,1 8,1" />
                    <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M8,2C4.6871429,2,2,4.6862857,2,8c0,3.312857,2.6871429,6,6,6,3.312857,0,6,-2.687143,6,-6 C14,4.6862857,11.312857,2,8,2" />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IconUnload">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,8C0,3.582 3.582,0 8,0 12.418,0 16,3.582 16,8 16,12.418 12.418,16 8,16 3.582,16 0,12.418 0,8" />
                    <GeometryDrawing Brush="#FF329932" Geometry="F1M8,1C4.135,1 1,4.134 1,8 1,11.865 4.135,15 8,15 11.865,15 15,11.865 15,8 15,4.134 11.865,1 8,1" />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IconSettings">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                    <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M15.9434,7.0796L15.8734,6.4596 13.6374,5.6646 14.6544,3.5256 14.2684,3.0376C13.8854,2.5536,13.4464,2.1146,12.9644,1.7316L12.4754,1.3456 10.3354,2.3626 9.5414,0.1286 8.9224,0.057599999999999C8.6194,0.0215999999999994 8.3124,-0.000400000000000844 8.0004,-0.000400000000000844 7.6894,-0.000400000000000844 7.3824,0.0215999999999994 7.0804,0.0565999999999995L6.4614,0.126599999999999 5.6664,2.3626 3.5254,1.3456 3.0374,1.7316C2.5554,2.1126,2.1164,2.5516,1.7324,3.0366L1.3454,3.5246 2.3624,5.6646 0.1274,6.4596 0.0564,7.0796C0.0224000000000011,7.3816 0.000400000000000844,7.6876 0.000400000000000844,7.9996 0.000400000000000844,8.3116 0.0224000000000011,8.6186 0.0564,8.9206L0.1274,9.5396 2.3624,10.3346 1.3454,12.4746 1.7324,12.9626C2.1144,13.4466,2.5534,13.8846,3.0374,14.2676L3.5254,14.6556 5.6664,13.6376 6.4614,15.8726 7.0804,15.9436C7.3824,15.9786 7.6894,15.9996 8.0004,15.9996 8.3134,15.9996 8.6204,15.9786 8.9244,15.9426L9.5424,15.8706 10.3364,13.6366 12.4754,14.6556 12.9644,14.2676C13.4484,13.8836,13.8874,13.4446,14.2684,12.9616L14.6544,12.4736 13.6374,10.3346 15.8734,9.5396 15.9434,8.9206C15.9784,8.6186 16.0004,8.3116 16.0004,7.9996 16.0004,7.6876 15.9784,7.3816 15.9434,7.0796" />
                    <GeometryDrawing Brush="#FF414141" Geometry="F1M8,5C6.343,5 5,6.343 5,8 5,9.657 6.343,11 8,11 9.657,11 11,9.657 11,8 11,6.343 9.657,5 8,5 M12.714,9.603C12.644,9.81,12.563,10.01,12.468,10.203L13.484,12.342C13.149,12.766,12.767,13.148,12.343,13.484L10.203,12.467C10.01,12.563,9.81,12.643,9.603,12.714L8.808,14.949C8.542,14.98 8.273,15 8,15 7.728,15 7.459,14.98 7.194,14.95L6.399,12.715C6.192,12.644,5.991,12.564,5.798,12.468L3.658,13.484C3.234,13.148,2.852,12.766,2.516,12.342L3.532,10.203C3.437,10.01,3.356,9.81,3.286,9.603L1.05,8.807C1.02,8.542 1,8.273 1,8 1,7.727 1.02,7.458 1.05,7.193L3.286,6.397C3.356,6.19,3.437,5.991,3.532,5.797L2.516,3.658C2.852,3.234,3.234,2.851,3.658,2.516L5.798,3.532C5.991,3.436,6.191,3.356,6.399,3.286L7.194,1.05C7.459,1.02 7.728,1 8,1 8.273,1 8.542,1.02 8.808,1.05L9.603,3.287C9.81,3.357,10.01,3.437,10.203,3.533L12.343,2.516C12.767,2.852,13.149,3.235,13.484,3.658L12.468,5.797C12.563,5.991,12.644,6.19,12.714,6.397L14.95,7.193C14.98,7.458 15,7.727 15,8 15,8.273 14.98,8.542 14.95,8.807z" />
                    <GeometryDrawing Brush="#FF414141" Geometry="F1M9.5,8C9.5,8.828 8.829,9.5 8,9.5 7.171,9.5 6.5,8.828 6.5,8 6.5,7.172 7.171,6.5 8,6.5 8.829,6.5 9.5,7.172 9.5,8" />
                    <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M8,9.5C7.172,9.5 6.5,8.828 6.5,8 6.5,7.172 7.172,6.5 8,6.5 8.828,6.5 9.5,7.172 9.5,8 9.5,8.828 8.828,9.5 8,9.5 M8,5C6.343,5 5,6.343 5,8 5,9.656 6.343,11 8,11 9.657,11 11,9.656 11,8 11,6.343 9.657,5 8,5" />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!-- Selectors -->
    <selectors:TypeDataTemplateSelector x:Key="TypeDataTemplateSelector" />
    
    <!-- Templates -->
    <ControlTemplate x:Key="TabHeaderToggleButton" TargetType="{x:Type RadioButton}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="LabelText">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static wpf:Brushes.ContentSelectedBrushKey}}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Underline">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="LabelText" Padding="0" Margin="0" Foreground="{DynamicResource {x:Static wpf:Brushes.UITextKey}}"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                   FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static wpf:Converters.Scale122}}"/>

                <!-- the textblock that displays the count -->
                <!-- Commented since it is not clear if we want to display anything in this textblock
                    <Border x:Name="TextBlockCountContainer" CornerRadius="2" Margin="3,0" Padding="3,0" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{DynamicResource {x:Static rwpf:Brushes.ContentSelectedBrushKey}}">
                        <TextBlock x:Name="TextBlockCount" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="{DynamicResource {x:Static rwpf:Brushes.ContentSelectedTextBrushKey}}"/>
                    </Border>
                    -->
            </StackPanel>

            <Rectangle x:Name="Underline" Visibility="Hidden" Margin="0" Height="3" Fill="{DynamicResource {x:Static wpf:Brushes.ContentSelectedBrushKey}}" Grid.Row="1" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="FillingListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <!-- set the background for IsEnabled == false -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static wpf:Brushes.ListPaneBackgroundKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static wpf:Brushes.ContentMouseOverBrushKey}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ContentMouseOverTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static wpf:Brushes.ContentInactiveSelectedBrushKey}}" />
                <Setter Property="TextBlock.Foreground" TargetName="Border" Value="{DynamicResource {x:Static wpf:Brushes.ContentInactiveSelectedTextBrushKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static wpf:Brushes.ContentSelectedBrushKey}}" />
                <Setter Property="TextBlock.Foreground" TargetName="Border" Value="{DynamicResource {x:Static wpf:Brushes.ContentSelectedTextBrushKey}}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Default styles -->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Static wpf:StyleKeys.ComboBoxStyleKey}}"/>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Static wpf:StyleKeys.ScrollBarStyleKey}}"/>
    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Static wpf:StyleKeys.ScrollViewerStyleKey}}"/>
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static wpf:StyleKeys.ButtonStyleKey}}"/>
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Static wpf:StyleKeys.TextBoxStyleKey}}"/>

    <!-- Named styles -->
    <Style x:Key="TooltipStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MaxWidth" Value="300" />
    </Style>

    <Style  TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.UITextKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style  TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.UITextKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ValidityIndicatorStyle" TargetType="{x:Type imaging:CrispImage}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="Moniker" Value="{x:Static imagecatalog:KnownMonikers.StatusOKOutline}"/>
        <Style.Triggers>
            <Trigger Property="cwpf:AttachedProperties.IsValid" Value="False">
                <Setter Property="Moniker" Value="{x:Static imagecatalog:KnownMonikers.StatusRequiredOutline}"/>        
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle Stroke="{DynamicResource {x:Static wpf:Brushes.WindowTextKey}}" StrokeDashArray="1 2" StrokeThickness="1" Margin="2" SnapsToDevicePixels="true"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveBorderBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveGlyphBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveBorderBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveGlyphBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonDownBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonDownBorderBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonDownActiveGlyphBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExpandCollapseButtonStyle" TargetType="{x:Type controls:ExpandCollapseButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.UITextKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExpandCollapseButton}">
                    <Border x:Name="Border" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static wpf:Brushes.ControlKey}}">
                        <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}">
                            <Rectangle x:Name="Collapsed" Fill="{StaticResource IconArrowRigth16}" Height="16" Width="16" />
                            <Rectangle x:Name="Expanded" Fill="{StaticResource IconArrowRigthDown16}" Height="16" Width="16" Visibility="Collapsed" />
                            <ContentPresenter Margin="1,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Collapsed" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Expanded" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Collapsed" Property="Fill" Value="{StaticResource IconArrowRigthHighlight16}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding}" FontWeight="SemiBold" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle Stroke="{DynamicResource {x:Static wpf:Brushes.WindowTextKey}}" StrokeDashArray="1 2" StrokeThickness="1" Margin="2,2,2,-2" SnapsToDevicePixels="true"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ButtonBase}" x:Key="HyperlinkButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ControlLinkTextKey}}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <TextBlock x:Name="Text" Foreground="{TemplateBinding Foreground}"
                               TextWrapping="Wrap" VerticalAlignment="Center" Text="{TemplateBinding Content}"/>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="TextDecorations" TargetName="Text" Value="Underline" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ControlLinkTextHoverKey}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="{DynamicResource {x:Static wpf:Brushes.WindowTextKey}}" StrokeDashArray="1 2" StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ButtonBase}" x:Key="HyperlinkDownArrowButton" BasedOn="{StaticResource HyperlinkButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <TextBlock x:Name="Text" Foreground="{TemplateBinding Foreground}"
                                   TextWrapping="Wrap" VerticalAlignment="Center" Text="{TemplateBinding Content}"/>
                        <Path x:Name="Arrow" VerticalAlignment="Center" StrokeThickness="0"
                              Height="8" Width="8" Margin="5,0,0,1" UseLayoutRounding="True"
                              Fill="{TemplateBinding Foreground}" Data="{StaticResource ArrowDown8}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="TextDecorations" TargetName="Text" Value="Underline" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ControlLinkTextHoverKey}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Hyperlink}" x:Key="HyperlinkStyle">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ControlLinkTextKey}}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ControlLinkTextHoverKey}}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
            </Trigger>

            <Trigger Property="NavigateUri" Value="{x:Null}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.WindowTextKey}}" />
                <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
                <Setter Property="IsEnabled" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FillingListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template" Value="{StaticResource FillingListBoxItemTemplate}" />
    </Style>

    <Style x:Key="VerticalSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Brushes.GrayTextBrushKey}}"/>
        <Setter Property="Margin" Value="4,0,4,0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border x:Uid="border" SnapsToDevicePixels="true" Width="1" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolWindowListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Brushes.UITextKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="true" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VirtualizingPanel.CacheLength" Value="1,2" />
        <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource TypeDataTemplateSelector}"/>
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
